{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\DK\\\\Desktop\\\\practices\\\\react\\\\coronaapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\DK\\\\Desktop\\\\practices\\\\react\\\\coronaapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\DK\\\\Desktop\\\\practices\\\\react\\\\coronaapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{fetchDailyData}from'../../api';import{Line,Bar}from'react-chartjs-2';import styles from'./Chart.module.css';var Chart=function Chart(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,deaths=_ref$data.deaths,recovered=_ref$data.recovered,country=_ref.country;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[]);var lineChart=dailyData.length?/*#__PURE__*/React.createElement(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:'Infected',borderColor:'#3333ff',fill:true},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:'Deaths',borderColor:'rgba(255,0,0,0.5)',fill:true}]}}):null;var barChart=confirmed?/*#__PURE__*/React.createElement(Bar,{data:{labels:['Infected','Recovered','Deaths'],datasets:[{label:'people',backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],data:[confirmed.value,recovered.value,deaths.value]}]},options:{legend:{display:false},title:{display:true,text:\"Current state in \".concat(country)}}}):null;return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},country?barChart:lineChart);};export default Chart;","map":{"version":3,"sources":["C:/Users/DK/Desktop/practices/react/coronaapp/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","deaths","recovered","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","barChart","backgroundColor","value","legend","display","title","text","container"],"mappings":"0gBAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,OAAQC,cAAR,KAA8B,WAA9B,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,iBAA1B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAgD,oBAA9CC,IAA8C,CAAxCC,SAAwC,WAAxCA,SAAwC,CAA9BC,MAA8B,WAA9BA,MAA8B,CAAvBC,SAAuB,WAAvBA,SAAuB,CAAZC,OAAY,MAAZA,OAAY,eACxBX,QAAQ,CAAC,EAAD,CADgB,wCACnDY,SADmD,eACxCC,YADwC,eAG1DZ,SAAS,CAAE,UAAM,CACb,GAAMa,CAAAA,QAAQ,2FAAG,+IACbD,YADa,uBACMX,CAAAA,cAAc,EADpB,qHAAH,kBAARY,CAAAA,QAAQ,2CAAd,CAGAA,QAAQ,GACX,CALQ,CAKN,EALM,CAAT,CAOA,GAAMC,CAAAA,SAAS,CACXH,SAAS,CAACI,MAAV,cAEI,oBAAC,IAAD,EACA,IAAI,CAAI,CACJC,MAAM,CAAGL,SAAS,CAACM,GAAV,CAAc,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAAd,CADL,CAEJC,QAAQ,CAAE,CAAC,CACPb,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAEV,CAAAA,SAAF,OAAEA,SAAF,OAAiBA,CAAAA,SAAjB,EAAd,CADC,CAEPa,KAAK,CAAE,UAFA,CAGPC,WAAW,CAAE,SAHN,CAIPC,IAAI,CAAE,IAJC,CAAD,CAMR,CACEhB,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAET,CAAAA,MAAF,OAAEA,MAAF,OAAcA,CAAAA,MAAd,EAAd,CADR,CAEEY,KAAK,CAAE,QAFT,CAGEC,WAAW,CAAE,mBAHf,CAIEC,IAAI,CAAE,IAJR,CANQ,CAFN,CADR,EAFJ,CAmBI,IApBR,CAuBA,GAAMC,CAAAA,QAAQ,CACVhB,SAAS,cAEL,oBAAC,GAAD,EACA,IAAI,CAAI,CACJS,MAAM,CAAE,CAAC,UAAD,CAAa,WAAb,CAA0B,QAA1B,CADJ,CAEJG,QAAQ,CAAE,CAAC,CACPC,KAAK,CAAE,QADA,CAEPI,eAAe,CAAC,CACf,mBADe,CAEf,mBAFe,CAGf,mBAHe,CAFT,CAOPlB,IAAI,CAAE,CAACC,SAAS,CAACkB,KAAX,CAAiBhB,SAAS,CAACgB,KAA3B,CAAiCjB,MAAM,CAACiB,KAAxC,CAPC,CAAD,CAFN,CADR,CAcA,OAAO,CAAI,CACPC,MAAM,CAAE,CAACC,OAAO,CAAE,KAAV,CADD,CAEPC,KAAK,CAAE,CAACD,OAAO,CAAE,IAAV,CAAgBE,IAAI,4BAAsBnB,OAAtB,CAApB,CAFA,CAdX,EAFK,CAqBP,IAtBN,CA0BA,mBACI,2BAAK,SAAS,CAAEN,MAAM,CAAC0B,SAAvB,EACKpB,OAAO,CAAGa,QAAH,CAAcT,SAD1B,CADJ,CAKH,CAhED,CAkEA,cAAeT,CAAAA,KAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{confirmed,deaths,recovered},country}) =>{\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect (() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length \r\n        ? (\r\n            <Line\r\n            data = {{\r\n                labels : dailyData.map(({ date }) => date ),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed}) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n\r\n                },{\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ?(\r\n            <Bar\r\n            data = {{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'people',\r\n                    backgroundColor:[\r\n                     'rgba(0,0,255,0.5)',\r\n                     'rgba(0,255,0,0.5)',\r\n                     'rgba(255,0,0,0.5)',\r\n                    ],\r\n                    data: [confirmed.value,recovered.value,deaths.value]\r\n                }]\r\n\r\n            }}\r\n            options = {{\r\n                legend: {display: false},\r\n                title: {display: true, text: `Current state in ${country}`}\r\n            }}\r\n            />\r\n        ):null\r\n    );\r\n\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}